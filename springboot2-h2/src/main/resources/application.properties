##Server
server.compression.enabled=true 
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript


##WebConfig
spring.resources.chain.strategy.content.enabled=true
spring.resources.chain.strategy.content.paths=/**
spring.mvc.static-path-pattern=/**
spring.resources.static-locations=classpath:/static/,classpath:/js/,classpath:/css/,classpath:/imgs/

##freemarker
spring.freemarker.cache=false
spring.freemarker.charset=UTF-8
spring.freemarker.check-template-location=true
spring.freemarker.content-type=text/html
spring.freemarker.enabled=true
spring.freemarker.suffix=.ftl
spring.freemarker.template-loader-path=classpath:/templates



##DB
spring.jpa.hibernate.ddl-auto = update
# 数据库url地址
spring.datasource.url=jdbc:h2:mem:spring
spring.datasource.username=spring
spring.datasource.password=spring
spring.datasource.driverClassName=org.h2.Driver

# 配置初始化大小、最小、最大
spring.datasource.initialSize=1
spring.datasource.maxActive=20
spring.datasource.minIdle=1
#配置获取连接等待超时的时间
spring.datasource.maxWait=60000
#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
#配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
#用来检测连接是否有效的sql，要求是一个查询语句。
spring.datasource.validationQuery=SELECT 'x'
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
#配置监控统计拦截的filters
spring.datasource.filters=stat,wall
# 配置db类型为h2 =dbType
spring.datasource.dbType=h2


##DB1
# 数据库url地址
spring.datasource1.url=jdbc:h2:mem:spring1
spring.datasource1.username=spring
spring.datasource1.password=spring
spring.datasource1.driverClassName=org.h2.Driver
# 配置初始化大小、最小、最大
spring.datasource1.initialSize=1
spring.datasource1.maxActive=20
spring.datasource1.minIdle=1
#配置获取连接等待超时的时间
spring.datasource1.maxWait=60000
#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource1.timeBetweenEvictionRunsMillis=60000
#配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource1.minEvictableIdleTimeMillis=300000
#用来检测连接是否有效的sql，要求是一个查询语句。
spring.datasource1.validationQuery=SELECT 'x'
spring.datasource1.testWhileIdle=true
spring.datasource1.testOnBorrow=false
spring.datasource1.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource1.poolPreparedStatements=true
spring.datasource1.maxPoolPreparedStatementPerConnectionSize=20
#配置监控统计拦截的filters
spring.datasource1.filters=stat,wall
# 配置db类型为h2 =dbType
spring.datasource1.dbType=h2

spring.redis.host=url
spring.redis.port=6379
spring.redis.password=123456
# 连接超时时间（毫秒）
spring.redis.timeout=10000
# Redis默认情况下有16个分片，这里配置具体使用的分片，默认是0
spring.redis.database=0
# 连接池最大连接数（使用负值表示没有限制） 默认 8
spring.redis.lettuce.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制） 默认 -1
spring.redis.lettuce.pool.max-wait=-1
# 连接池中的最大空闲连接 默认 8
spring.redis.lettuce.pool.max-idle=8
# 连接池中的最小空闲连接 默认 0
spring.redis.lettuce.pool.min-idle=0